<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on Lunatine&#39;s Box</title>
    <link>/categories/bash/</link>
    <description>Recent content in bash on Lunatine&#39;s Box</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Mar 2016 07:39:59 +0000</lastBuildDate>
    
	<atom:link href="/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bash FAQ (Part 1)</title>
      <link>/post/bash-faq-part-1/</link>
      <pubDate>Mon, 21 Mar 2016 07:39:59 +0000</pubDate>
      
      <guid>/post/bash-faq-part-1/</guid>
      <description>본 문서는 Bash 쉘 스크립트에 대한 FAQ 내용을 정리한 문서입니다. 따라서, 기본적인 Bash 쉘 스크립트의 문법과 사용 방법에 대해서는 알고 있다는 가정하에 작성되었습니다. Part 1이라고 제목을 붙인 이유는 자주묻는 질문이 추가로 생기거나 생각나는대로 FAQ를 정리해서 올리려고 합니다. 어찌보면 위키로 정리하는게 적합한 문서이기도 합니다.
[[ ]] vs [ ] if 구문과 단짝처럼 사용되는 []에 대해서 [[]]과 []의 차이점을 묻는 경우가 많다. 먼저, 각각의 의미를 살펴보도록 하자.
if/then 구문의 경우 해당 구문의 결과(exit 값)에 대한 조건을 판단하고 구문의 내용을 실행하도록 되어있다.</description>
    </item>
    
    <item>
      <title>[TIP] Bash - 반복 출력</title>
      <link>/post/tip-bash-brace-expansion/</link>
      <pubDate>Wed, 22 Jul 2015 06:16:00 +0000</pubDate>
      
      <guid>/post/tip-bash-brace-expansion/</guid>
      <description>Shell Bash 환경에서 작업을 하다보면 연속 된 숫자 값을 이용하는 경우가 종종 있다. 특정 단어에 연속 된 숫자를 붙이거나 연속 된 숫자 값의 개수만큼 Loop를 실행(반복)하거나 하는 작업들이 대표적이다. 오랜 기간 Unix/Linux를 사용해 왔던 분들이라면 보통 아래와 같은 형태로 사용 하는 것을 종종 볼 수 있다.
$ echo `seq 1 10` 1 2 3 4 5 6 7 8 9 10 $ for x in `seq 1 10` &amp;gt; do &amp;gt; echo -n &amp;quot;$x &amp;quot; &amp;gt; done 1 2 3 4 5 6 7 8 9 10$  사실 seq (sequence)는 별도의 실행 파일이기 때문에 bash와 직접적인 관련은 없다.</description>
    </item>
    
  </channel>
</rss>