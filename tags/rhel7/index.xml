<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RHEL7 on Creative portfolio</title>
    <link>https://example.org/tags/rhel7/</link>
    <description>Recent content in RHEL7 on Creative portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jan 2015 17:02:03 +0000</lastBuildDate>
    
	<atom:link href="https://example.org/tags/rhel7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RHEL6 - intel_idle과 C States</title>
      <link>https://example.org/posts/rhel6-intel_idle-and-c-states/</link>
      <pubDate>Tue, 06 Jan 2015 17:02:03 +0000</pubDate>
      
      <guid>https://example.org/posts/rhel6-intel_idle-and-c-states/</guid>
      <description>C/G/S/P states intel_idle과 관련된 내용을 다루기에 앞서 P-States와 C-States에 대해서 간단히 정리하고자 한다. Intel 아키텍처 환경에서 리눅스 커널과 CPU를 알아가다보면 P/S/G/C States에 대한 내용을 접할 수 있다. 이러한 상태 값에 대해서 간단히 설명하도록 하겠다.
P-States P-States는 작업 부하에 따라서 CPU의 전압과 클럭주파수를 조절하는 정도를 정의 한 값으로 명령어 처리(Operation)상태를 기준으로 절전 및 성능 향상을 꾀하기 위한 기법이다. 과거에는 SpeedStep이라는 기술로 소개 되었기(정확히 같은 것은 아니다) 때문에 단순히 클럭주파수를 조절해서 에너지 절약을 위한 방안으로만 치부되었는데 CPU가 연산처리를 할 때의 상태를 반영하고 있다.</description>
    </item>
    
    <item>
      <title>systemd 살펴보기</title>
      <link>https://example.org/posts/about-systemd/</link>
      <pubDate>Tue, 21 Oct 2014 14:15:46 +0000</pubDate>
      
      <guid>https://example.org/posts/about-systemd/</guid>
      <description>systemd 살펴보기 우선, systemd가 이렇게 급 부상하게 될 줄은 솔직히 몰랐다. 워낙 많은 오픈소스 프로젝트들이 나오고 있기 때문에 그 중 하나 정도로만 생각했는데 어느 순간 Fedora에 적용이 되더니 당연한 수순대로 RHEL7에 도입이 되었다. 아직 Debian/Ubuntu 계열은 기본으로 채택되지 않았지만 조만간 릴리즈되는 버전에서 새로운 PID 1으로 자리잡게 될 것 같다.
이러한 분위기에 맞추어 systemd가 무엇이고 이에 대해서 간단히 짚어 볼 필요가 있을 듯 하여 간단히 소개해 본다. (늘 그렇듯이 상세한 내용은 공식홈페이지의 문서를 참고하는 것이 좋다)</description>
    </item>
    
  </channel>
</rss>